public class dp_3 {

/*public static int House_rob_1(int nums[] ,int n){                  //recursion
        if(n==1){
            return nums[0];
        }
        if(n<0){
            return 0;
        }

        int pick=nums[n]+House_rob_1(nums ,n-2);
        int not_pick=0+House_rob_1(nums ,n-1);
        return Math.max(pick, not_pick);
    }*/

    /*public static int House_rob_1(int nums[],int n){                      //tanulation
        int dp[]=new int[n+1];
        if(n==0){
            return nums[0];
        }
        dp[0]=nums[0];
        dp[1]=Math.max(nums[0], nums[1]);

        for(int i=2;i<=n;i++){
            dp[i]=Math.max(dp[i-2]+nums[i] ,dp[i-1]);
        }
        return dp[n];
    }


    public static void main(String[] args) {
        int nums[]={2,7,9,3,1};
        int result=House_rob_1(nums, nums.length-1);
        System.out.println(result);
    }*/

    public static int House_rob_1(int nums[],int n ,int memo[]){                      //memorization
        if(n==0){
            return nums[0];
        }
        
        if(n<0){
            return 0;
        }

        if(memo[n] != -1){
            return memo[n];
        }

        int pick=nums[n]+House_rob_1(nums ,n-2 ,memo);
        int not_pick=0+House_rob_1(nums ,n-1 ,memo);
        return Math.max(pick, not_pick);
    }

    public static void main(String[] args) {
        int nums[]={2,7,9,3,1};
        int memo[]=new int[nums.length];
        for (int i = 0; i < memo.length; i++) {
            memo[i] = -1;
        }
        int result=House_rob_1(nums, nums.length-1 ,memo);
        System.out.println(result);
    }


}

/*Time Complexity: O(2^n) for recursion; optimized to O(n) with DP or memoization.
Space Complexity: O(n) for DP/memo; O(1) with space-optimized tabulation.
*/

/*                      rob(4)
                    /       \
               rob(3)       rob(2) + 1
              /     \         /     \
         rob(2)   rob(1)+3  rob(1)  rob(0)+9
         /   \       |        |       |
    rob(1) rob(0)+9  ...     ...     ...
     / \
rob(0) rob(-1)+7
 |       |
2        0

*/
